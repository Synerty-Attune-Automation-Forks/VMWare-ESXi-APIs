
TERM=dumb pwsh -NonInteractive -NoProfile -Command - <<'EOF'
Set-StrictMode -Version Latest
$ErrorActionPreference = "Stop"

Import-Module VMware.VimAutomation.Core

try {
    Connect-VIServer {vmwareVcenterNode.ip} `
        -User "{vmwareVcenterUser.user}" `
        -Password '{vmwareVcenterUser.password}' `
        -ErrorAction Stop
    Write-Verbose "Successfully connected to VIServer"

} catch {
    Write-Error "Failed to connect to VIServer: $_"
    exit 1
}

Start-Sleep -Seconds 5

# Get the Datastore
$datastore = Get-Datastore -Name 

try {
    $datastore = Get-Datastore -Name '{vmStoragePoolName}' -ErrorAction Stop
    Write-Verbose "Successfully retrieved datastore: $($datastore.Name)"
} catch {
    Write-Error "Failed to get datastore: $_"
    exit 1
}

if ($datastore -eq $null) {
    Write-Host "Error: Datastore not found or not accessible."
    exit 1
}

# Create the DS drive
if (Test-Path "ds:") {
   Remove-PSDrive ds -Force -ErrorAction SilentlyContinue
   Write-Verbose "Removed existing ds: drive"
}

if ($datastore -is [System.Array]) {
    Write-Host "Get-Datastore returned multiple datastores, using first item in array.."
    $datastore = $datastore[0]
}

try {
    New-PSDrive -Location $datastore -Name ds -PSProvider VimDatastore -Root "" -ErrorAction Stop
} catch {
    Write-Error "Error creating PSDrive: $_"
    exit 1
}


$vmwareBootIsoDirectory = "/kickstart_isos"
$folderPath = "ds:$vmwareBootIsoDirectory"
if (!(Test-Path $folderPath)) {
    New-Item -Path $folderPath -ItemType Directory
    Write-Host "Created directory: $vmwareBootIsoDirectory"
} else {
    Write-Host "$vmwareBootIsoDirectory directory exists on the ESXi Host. Great."
}

# Remove the DS Drive
Remove-PSDrive ds -Force

EOF